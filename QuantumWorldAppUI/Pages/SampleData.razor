@page "/SampleData"
@inject IBuildingData buildingData
@inject IResourceData resourceData
@inject IUserData userData
<h3>Sample Data</h3>
@if (resourcesCreated)
{
	<h4>Resources have been created</h4>
}
else
{
<button class="btn btn-primary" @onclick="CreateResources">Create 	Resources</button>
}
@if (buildingsCreated)
{
	<h4>Buildings have been created</h4>
}
else
{
<button class="btn btn-primary" @onclick="CreateBuildings">Create 	Buildings</button>
}

<button class="btn btn-danger" @onclick="GenerateSampleData">Generate Sample Data</button>

@code {
	private bool resourcesCreated = false;
	private bool buildingsCreated = false;

	private async Task GenerateSampleData()
	{
		var foundBuildings = await buildingData.GetAllBuildings();
		var foundResources = await resourceData.GetAllResources();

		UserModel user = new()
			{
				FirstName = "Kamil",
				LastName = "Preweda",
				EmailAddress = "kamil@test.com",
				DisplayName = "Sample 2 Kamil Preweda",
				ObjectIdentifier = "abc-123",
				Points = 100,
				Buildings = foundBuildings,
				Resources = foundResources
	};
	await userData.CreateUser(user);
	var foundUser = await userData.GetUserFromAuthentication("abc-123");
	var resources  = await resourceData.GetAllResources();
	var buildings = await buildingData.GetAllBuildings();
}


	private async Task CreateResources()
	{
		var resources = await resourceData.GetAllResources();
		if (resources?.Count > 0)
		{
			return;
		}
		ResourceModel resource = new()
		{
			ResourceName = "2 TestResource",
			ResourceValue = 500,
			ResourceMultiplier = 50
		};
		await resourceData.CreateResource(resource);
		resourcesCreated = true;
	}
	private async Task CreateBuildings()
	{
		var buildings = await buildingData.GetAllBuildings();
		if (buildings?.Count > 0)
		{
			return;
		}

		BuildingModel building = new()
			{
				BuildingName = "2 TestBuilding",
				BuildingDescription = "2 Testing",
				BuildingTimeToBuild = 4,
				BuildingCost = 200,
				ApprovedToBuild = false
			};

		await buildingData.CreateBuilding(building);
		buildingsCreated = true;
	}
}
